---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
  ┌─ call_statement_with_args_2.fe:2:5
  │
2 │     baz: Map<u256, u256>
  │     ^^^^^^^^^^^^^^^^^^^^ Map<u256, u256>

note: 
  ┌─ call_statement_with_args_2.fe:4:5
  │  
4 │ ╭     fn assign(mut self, _ val: u256) -> u256 {
5 │ │         self.baz[0] = val
6 │ │         return val
7 │ │     }
  │ ╰─────^ params: [mut self, { label: Some("_"), name: val, typ: u256 }] -> u256

note: 
  ┌─ call_statement_with_args_2.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^ mut Foo

note: 
  ┌─ call_statement_with_args_2.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut SPtr<Map<u256, u256>>

note: 
  ┌─ call_statement_with_args_2.fe:5:9
  │
5 │         self.baz[0] = val
  │         ^^^^^^^^^^^   ^^^ u256
  │         │              
  │         mut SPtr<u256>
6 │         return val
  │                ^^^ u256

note: 
   ┌─ call_statement_with_args_2.fe:9:5
   │  
 9 │ ╭     pub fn bar(mut self) -> u256 {
10 │ │         self.assign(100)
11 │ │         return self.baz[0]
12 │ │     }
   │ ╰─────^ params: [mut self] -> u256

note: 
   ┌─ call_statement_with_args_2.fe:10:9
   │
10 │         self.assign(100)
   │         ^^^^        ^^^ u256
   │         │            
   │         mut Foo

note: 
   ┌─ call_statement_with_args_2.fe:10:9
   │
10 │         self.assign(100)
   │         ^^^^^^^^^^^^^^^^ u256
11 │         return self.baz[0]
   │                ^^^^ mut Foo

note: 
   ┌─ call_statement_with_args_2.fe:11:16
   │
11 │         return self.baz[0]
   │                ^^^^^^^^ ^ u256
   │                │         
   │                mut SPtr<Map<u256, u256>>

note: 
   ┌─ call_statement_with_args_2.fe:11:16
   │
11 │         return self.baz[0]
   │                ^^^^^^^^^^^ mut SPtr<u256> -Load-> u256


