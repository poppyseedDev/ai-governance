---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
   ┌─ for_loop_with_continue.fe:2:5
   │  
 2 │ ╭     pub fn bar() -> u256 {
 3 │ │         let mut my_array: Array<u256, 5> = [0; 5]
 4 │ │         my_array[0] = 2
 5 │ │         my_array[1] = 3
   · │
16 │ │         return sum
17 │ │     }
   │ ╰─────^ params: [] -> u256

note: 
   ┌─ for_loop_with_continue.fe:3:17
   │
 3 │         let mut my_array: Array<u256, 5> = [0; 5]
   │                 ^^^^^^^^ mut Array<u256, 5>
   ·
 9 │         let mut sum: u256 = 0
   │                 ^^^ mut u256
10 │         for i in my_array {
   │             ^ u256

note: 
  ┌─ for_loop_with_continue.fe:3:45
  │
3 │         let mut my_array: Array<u256, 5> = [0; 5]
  │                                             ^  ^ u256
  │                                             │   
  │                                             u256

note: 
  ┌─ for_loop_with_continue.fe:3:44
  │
3 │         let mut my_array: Array<u256, 5> = [0; 5]
  │                                            ^^^^^^ Array<u256, 5>
4 │         my_array[0] = 2
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut Array<u256, 5>

note: 
  ┌─ for_loop_with_continue.fe:4:9
  │
4 │         my_array[0] = 2
  │         ^^^^^^^^^^^   ^ u256
  │         │              
  │         mut u256
5 │         my_array[1] = 3
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut Array<u256, 5>

note: 
  ┌─ for_loop_with_continue.fe:5:9
  │
5 │         my_array[1] = 3
  │         ^^^^^^^^^^^   ^ u256
  │         │              
  │         mut u256
6 │         my_array[2] = 5
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut Array<u256, 5>

note: 
  ┌─ for_loop_with_continue.fe:6:9
  │
6 │         my_array[2] = 5
  │         ^^^^^^^^^^^   ^ u256
  │         │              
  │         mut u256
7 │         my_array[3] = 6
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut Array<u256, 5>

note: 
  ┌─ for_loop_with_continue.fe:7:9
  │
7 │         my_array[3] = 6
  │         ^^^^^^^^^^^   ^ u256
  │         │              
  │         mut u256
8 │         my_array[4] = 9
  │         ^^^^^^^^ ^ u256
  │         │         
  │         mut Array<u256, 5>

note: 
   ┌─ for_loop_with_continue.fe:8:9
   │
 8 │         my_array[4] = 9
   │         ^^^^^^^^^^^   ^ u256
   │         │              
   │         mut u256
 9 │         let mut sum: u256 = 0
   │                             ^ u256
10 │         for i in my_array {
   │                  ^^^^^^^^ mut Array<u256, 5>
11 │             if i % 2 == 0 {
   │                ^   ^ u256
   │                │    
   │                u256

note: 
   ┌─ for_loop_with_continue.fe:11:16
   │
11 │             if i % 2 == 0 {
   │                ^^^^^    ^ u256
   │                │         
   │                u256

note: 
   ┌─ for_loop_with_continue.fe:11:16
   │
11 │             if i % 2 == 0 {
   │                ^^^^^^^^^^ bool
   ·
14 │             sum = sum + i
   │             ^^^   ^^^   ^ u256
   │             │     │      
   │             │     mut u256
   │             mut u256

note: 
   ┌─ for_loop_with_continue.fe:14:19
   │
14 │             sum = sum + i
   │                   ^^^^^^^ u256
15 │         }
16 │         return sum
   │                ^^^ mut u256


