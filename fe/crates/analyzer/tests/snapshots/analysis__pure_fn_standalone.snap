---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
  ┌─ pure_fn_standalone.fe:1:1
  │  
1 │ ╭ fn add_bonus(_ x: u256) -> u256 {
2 │ │     return x + 10
3 │ │ }
  │ ╰─^ params: [{ label: Some("_"), name: x, typ: u256 }] -> u256

note: 
  ┌─ pure_fn_standalone.fe:2:12
  │
2 │     return x + 10
  │            ^   ^^ u256
  │            │    
  │            u256

note: 
  ┌─ pure_fn_standalone.fe:2:12
  │
2 │     return x + 10
  │            ^^^^^^ u256

note: 
  ┌─ pure_fn_standalone.fe:6:5
  │
6 │     cool_users: Map<address, bool>
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, bool>
7 │     points: Map<address, u256>
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^ Map<address, u256>

note: 
   ┌─ pure_fn_standalone.fe:9:5
   │  
 9 │ ╭     fn add_points(mut self, _ user: address, _ val: u256) {
10 │ │         if self.cool_users[user] {
11 │ │             self.points[user] += add_bonus(val)
12 │ │         } else {
13 │ │             self.points[user] += val
14 │ │         }
15 │ │     }
   │ ╰─────^ params: [mut self, { label: Some("_"), name: user, typ: address }, { label: Some("_"), name: val, typ: u256 }] -> ()

note: 
   ┌─ pure_fn_standalone.fe:10:12
   │
10 │         if self.cool_users[user] {
   │            ^^^^ mut Foo

note: 
   ┌─ pure_fn_standalone.fe:10:12
   │
10 │         if self.cool_users[user] {
   │            ^^^^^^^^^^^^^^^ ^^^^ address
   │            │                
   │            mut SPtr<Map<address, bool>>

note: 
   ┌─ pure_fn_standalone.fe:10:12
   │
10 │         if self.cool_users[user] {
   │            ^^^^^^^^^^^^^^^^^^^^^ mut SPtr<bool> -Load-> bool
11 │             self.points[user] += add_bonus(val)
   │             ^^^^ mut Foo

note: 
   ┌─ pure_fn_standalone.fe:11:13
   │
11 │             self.points[user] += add_bonus(val)
   │             ^^^^^^^^^^^ ^^^^ address
   │             │            
   │             mut SPtr<Map<address, u256>>

note: 
   ┌─ pure_fn_standalone.fe:11:13
   │
11 │             self.points[user] += add_bonus(val)
   │             ^^^^^^^^^^^^^^^^^              ^^^ u256
   │             │                               
   │             mut SPtr<u256> -Load-> u256

note: 
   ┌─ pure_fn_standalone.fe:11:34
   │
11 │             self.points[user] += add_bonus(val)
   │                                  ^^^^^^^^^^^^^^ u256
12 │         } else {
13 │             self.points[user] += val
   │             ^^^^ mut Foo

note: 
   ┌─ pure_fn_standalone.fe:13:13
   │
13 │             self.points[user] += val
   │             ^^^^^^^^^^^ ^^^^ address
   │             │            
   │             mut SPtr<Map<address, u256>>

note: 
   ┌─ pure_fn_standalone.fe:13:13
   │
13 │             self.points[user] += val
   │             ^^^^^^^^^^^^^^^^^    ^^^ u256
   │             │                     
   │             mut SPtr<u256> -Load-> u256

note: 
   ┌─ pure_fn_standalone.fe:17:5
   │  
17 │ ╭     pub fn bar(mut self, _ x: u256) -> u256 {
18 │ │         let a: address = address(x)
19 │ │         self.add_points(a, 100)
20 │ │         self.cool_users[a] = true
21 │ │         self.add_points(a, 100)
22 │ │         return self.points[a]
23 │ │     }
   │ ╰─────^ params: [mut self, { label: Some("_"), name: x, typ: u256 }] -> u256

note: 
   ┌─ pure_fn_standalone.fe:18:13
   │
18 │         let a: address = address(x)
   │             ^ address

note: 
   ┌─ pure_fn_standalone.fe:18:34
   │
18 │         let a: address = address(x)
   │                                  ^ u256

note: 
   ┌─ pure_fn_standalone.fe:18:26
   │
18 │         let a: address = address(x)
   │                          ^^^^^^^^^^ address
19 │         self.add_points(a, 100)
   │         ^^^^            ^  ^^^ u256
   │         │               │   
   │         │               address
   │         mut Foo

note: 
   ┌─ pure_fn_standalone.fe:19:9
   │
19 │         self.add_points(a, 100)
   │         ^^^^^^^^^^^^^^^^^^^^^^^ ()
20 │         self.cool_users[a] = true
   │         ^^^^ mut Foo

note: 
   ┌─ pure_fn_standalone.fe:20:9
   │
20 │         self.cool_users[a] = true
   │         ^^^^^^^^^^^^^^^ ^ address
   │         │                
   │         mut SPtr<Map<address, bool>>

note: 
   ┌─ pure_fn_standalone.fe:20:9
   │
20 │         self.cool_users[a] = true
   │         ^^^^^^^^^^^^^^^^^^   ^^^^ bool
   │         │                     
   │         mut SPtr<bool>
21 │         self.add_points(a, 100)
   │         ^^^^            ^  ^^^ u256
   │         │               │   
   │         │               address
   │         mut Foo

note: 
   ┌─ pure_fn_standalone.fe:21:9
   │
21 │         self.add_points(a, 100)
   │         ^^^^^^^^^^^^^^^^^^^^^^^ ()
22 │         return self.points[a]
   │                ^^^^ mut Foo

note: 
   ┌─ pure_fn_standalone.fe:22:16
   │
22 │         return self.points[a]
   │                ^^^^^^^^^^^ ^ address
   │                │            
   │                mut SPtr<Map<address, u256>>

note: 
   ┌─ pure_fn_standalone.fe:22:16
   │
22 │         return self.points[a]
   │                ^^^^^^^^^^^^^^ mut SPtr<u256> -Load-> u256


