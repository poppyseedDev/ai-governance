---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
  ┌─ strings.fe:2:5
  │
2 │     pub s2: String<26>
  │     ^^^^^^^^^^^^^^^^^^ String<26>
3 │     pub u: u256
  │     ^^^^^^^^^^^ u256
4 │     pub s1: String<42>
  │     ^^^^^^^^^^^^^^^^^^ String<42>
5 │     pub s3: String<100>
  │     ^^^^^^^^^^^^^^^^^^^ String<100>
6 │     pub a: address
  │     ^^^^^^^^^^^^^^ address
7 │     pub s4: String<18>
  │     ^^^^^^^^^^^^^^^^^^ String<18>
8 │     pub s5: String<100>
  │     ^^^^^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:17:5
   │  
17 │ ╭     pub fn bar(s1: String<100>, s2: String<100>) -> String<100> {
18 │ │         return s2
19 │ │     }
   │ ╰─────^ params: [{ label: None, name: s1, typ: String<100> }, { label: None, name: s2, typ: String<100> }] -> String<100>

note: 
   ┌─ strings.fe:18:16
   │
18 │         return s2
   │                ^^ String<100> -Copy-> String<100>

note: 
   ┌─ strings.fe:21:5
   │  
21 │ ╭     pub fn return_static_string() -> String<43> {
22 │ │         return "The quick brown fox jumps over the lazy dog"
23 │ │     }
   │ ╰─────^ params: [] -> String<43>

note: 
   ┌─ strings.fe:22:16
   │
22 │         return "The quick brown fox jumps over the lazy dog"
   │                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ String<43> -Copy-> String<43>

note: 
   ┌─ strings.fe:25:5
   │  
25 │ ╭     pub fn return_casted_static_string() -> String<100> {
26 │ │         return String<100>("foo")
27 │ │     }
   │ ╰─────^ params: [] -> String<100>

note: 
   ┌─ strings.fe:26:28
   │
26 │         return String<100>("foo")
   │                            ^^^^^ String<3> -StringSizeIncrease-> String<100>

note: 
   ┌─ strings.fe:26:16
   │
26 │         return String<100>("foo")
   │                ^^^^^^^^^^^^^^^^^^ String<100>

note: 
   ┌─ strings.fe:29:5
   │  
29 │ ╭     pub fn shorter_string_assign() {
30 │ │         let s: String<18> = "fe"
31 │ │     }
   │ ╰─────^ params: [] -> ()

note: 
   ┌─ strings.fe:30:13
   │
30 │         let s: String<18> = "fe"
   │             ^ String<18>

note: 
   ┌─ strings.fe:30:29
   │
30 │         let s: String<18> = "fe"
   │                             ^^^^ String<18>

note: 
   ┌─ strings.fe:33:5
   │  
33 │ ╭     pub fn return_special_chars() -> String<18> {
34 │ │         return "\n\"'\r\t
35 │ │         foo\\"
36 │ │     }
   │ ╰─────^ params: [] -> String<18>

note: 
   ┌─ strings.fe:34:16
   │  
34 │           return "\n\"'\r\t
   │ ╭────────────────^
35 │ │         foo\\"
   │ ╰──────────────^ String<18> -Copy-> String<18>


