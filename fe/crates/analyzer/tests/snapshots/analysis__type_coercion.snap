---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
  ┌─ type_coercion.fe:2:5
  │
2 │     s: Array<i32, 20>
  │     ^^^^^^^^^^^^^^^^^ Array<i32, 20>
3 │     x: i32
  │     ^^^^^^ i32

note: 
  ┌─ type_coercion.fe:5:5
  │  
5 │ ╭     pub fn test(self, index: u8) -> i32 {
6 │ │         let elem: i32 = self.s[index]
7 │ │         return elem
8 │ │     }
  │ ╰─────^ params: [self, { label: None, name: index, typ: u8 }] -> i32

note: 
  ┌─ type_coercion.fe:6:13
  │
6 │         let elem: i32 = self.s[index]
  │             ^^^^ i32

note: 
  ┌─ type_coercion.fe:6:25
  │
6 │         let elem: i32 = self.s[index]
  │                         ^^^^ Foo

note: 
  ┌─ type_coercion.fe:6:25
  │
6 │         let elem: i32 = self.s[index]
  │                         ^^^^^^ ^^^^^ u8 -IntSizeIncrease-> u256
  │                         │       
  │                         SPtr<Array<i32, 20>>

note: 
  ┌─ type_coercion.fe:6:25
  │
6 │         let elem: i32 = self.s[index]
  │                         ^^^^^^^^^^^^^ SPtr<i32> -Load-> i32
7 │         return elem
  │                ^^^^ i32

note: 
   ┌─ type_coercion.fe:10:5
   │  
10 │ ╭     pub fn tuple(self) {
11 │ │         let a: (i32, i32) = (self.x, self.x)
12 │ │     }
   │ ╰─────^ params: [self] -> ()

note: 
   ┌─ type_coercion.fe:11:13
   │
11 │         let a: (i32, i32) = (self.x, self.x)
   │             ^ (i32, i32)

note: 
   ┌─ type_coercion.fe:11:30
   │
11 │         let a: (i32, i32) = (self.x, self.x)
   │                              ^^^^ Foo

note: 
   ┌─ type_coercion.fe:11:30
   │
11 │         let a: (i32, i32) = (self.x, self.x)
   │                              ^^^^^^  ^^^^ Foo
   │                              │        
   │                              SPtr<i32> -Load-> i32

note: 
   ┌─ type_coercion.fe:11:38
   │
11 │         let a: (i32, i32) = (self.x, self.x)
   │                                      ^^^^^^ SPtr<i32> -Load-> i32

note: 
   ┌─ type_coercion.fe:11:29
   │
11 │         let a: (i32, i32) = (self.x, self.x)
   │                             ^^^^^^^^^^^^^^^^ (i32, i32)


