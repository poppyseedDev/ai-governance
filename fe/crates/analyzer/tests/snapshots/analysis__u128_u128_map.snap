---
source: crates/analyzer/tests/analysis.rs
expression: "build_snapshot(&db, module)"
---
note: 
  ┌─ u128_u128_map.fe:2:5
  │
2 │     bar: Map<u128, u128>
  │     ^^^^^^^^^^^^^^^^^^^^ Map<u128, u128>

note: 
  ┌─ u128_u128_map.fe:4:5
  │  
4 │ ╭     pub fn read_bar(self, key: u128) -> u128 {
5 │ │         return self.bar[key]
6 │ │     }
  │ ╰─────^ params: [self, { label: None, name: key, typ: u128 }] -> u128

note: 
  ┌─ u128_u128_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^ Foo

note: 
  ┌─ u128_u128_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^^^^^ ^^^ u128
  │                │         
  │                SPtr<Map<u128, u128>>

note: 
  ┌─ u128_u128_map.fe:5:16
  │
5 │         return self.bar[key]
  │                ^^^^^^^^^^^^^ SPtr<u128> -Load-> u128

note: 
   ┌─ u128_u128_map.fe:8:5
   │  
 8 │ ╭     pub fn write_bar(mut self, key: u128, value: u128) {
 9 │ │         self.bar[key] = value
10 │ │     }
   │ ╰─────^ params: [mut self, { label: None, name: key, typ: u128 }, { label: None, name: value, typ: u128 }] -> ()

note: 
  ┌─ u128_u128_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^ mut Foo

note: 
  ┌─ u128_u128_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^^^^^ ^^^ u128
  │         │         
  │         mut SPtr<Map<u128, u128>>

note: 
  ┌─ u128_u128_map.fe:9:9
  │
9 │         self.bar[key] = value
  │         ^^^^^^^^^^^^^   ^^^^^ u128
  │         │                
  │         mut SPtr<u128>


