---
source: crates/analyzer/tests/errors.rs
expression: "error_string(&path, test_files::fixture(path))"
---
error: `self` can't be used as a variable name
  ┌─ compile_errors/self_misuse.fe:2:9
  │
2 │     let self: u8 = 10
  │         ^^^^ expected a name, found keyword `self`

error: `self` can only be used in contract, struct, trait or impl functions
  ┌─ compile_errors/self_misuse.fe:3:5
  │
3 │     self = 5
  │     ^^^^ not allowed in functions defined directly in a module

error: `self` is not callable
   ┌─ compile_errors/self_misuse.fe:16:9
   │
16 │         self()
   │         ^^^^ can't be used as a function

error: `self` address must be retrieved via `Context` object
   ┌─ compile_errors/self_misuse.fe:34:26
   │
34 │         let x: address = address(self)
   │                          ^^^^^^^^^^^^ use `ctx.self_address()` here

error: `g` must be called via `self`
   ┌─ compile_errors/self_misuse.fe:31:8
   │
31 │     fn g(self) {}
   │        ^ `g` is defined here as a function that takes `self`
   ·
35 │         g(self)
   │         ^ `g` is called here as a standalone function
   │
   = Suggestion: use `self.g(...)` instead of `g(...)`

error: `self` can't be used where a contract of type `C` is expected
   ┌─ compile_errors/self_misuse.fe:39:13
   │
39 │         bar(self)
   │             ^^^^ cannot use `self` here
   │
   = Hint: Values of type `C` represent external contracts.
     To treat `self` as an external contract, use `C(ctx.self_address())`.


