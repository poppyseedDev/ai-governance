---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(stmt_path_type), functions::parse_stmt,\n    \"let x: foo::Bar = foo::Bar(1, 2)\")"

---
Node(
  kind: VarDecl(
    mut_: None,
    target: Node(
      kind: Name("x"),
      span: Span(
        start: 4,
        end: 5,
      ),
    ),
    typ: Node(
      kind: Path(Path(
        segments: [
          Node(
            kind: "foo",
            span: Span(
              start: 7,
              end: 10,
            ),
          ),
          Node(
            kind: "Bar",
            span: Span(
              start: 12,
              end: 15,
            ),
          ),
        ],
      )),
      span: Span(
        start: 7,
        end: 15,
      ),
    ),
    value: Some(Node(
      kind: Call(
        func: Node(
          kind: Path(Path(
            segments: [
              Node(
                kind: "foo",
                span: Span(
                  start: 18,
                  end: 21,
                ),
              ),
              Node(
                kind: "Bar",
                span: Span(
                  start: 23,
                  end: 26,
                ),
              ),
            ],
          )),
          span: Span(
            start: 18,
            end: 26,
          ),
        ),
        generic_args: None,
        args: Node(
          kind: [
            Node(
              kind: CallArg(
                label: None,
                value: Node(
                  kind: Num("1"),
                  span: Span(
                    start: 27,
                    end: 28,
                  ),
                ),
              ),
              span: Span(
                start: 27,
                end: 28,
              ),
            ),
            Node(
              kind: CallArg(
                label: None,
                value: Node(
                  kind: Num("2"),
                  span: Span(
                    start: 30,
                    end: 31,
                  ),
                ),
              ),
              span: Span(
                start: 30,
                end: 31,
              ),
            ),
          ],
          span: Span(
            start: 26,
            end: 32,
          ),
        ),
      ),
      span: Span(
        start: 18,
        end: 32,
      ),
    )),
  ),
  span: Span(
    start: 0,
    end: 32,
  ),
)
