---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(struct_def), try_parse_module,\n    r#\"struct S {\n  #indexed\n  x: address\n  pub y: u8\n  z: u8\n  pub a: Map<u8, foo>\n\n  pub fn foo(self) -> u8 {\n    return self.z + self.y\n  }\n  unsafe fn bar() {}\n}\"#)"

---
Node(
  kind: Module(
    body: [
      Struct(Node(
        kind: Struct(
          name: Node(
            kind: "S",
            span: Span(
              start: 7,
              end: 8,
            ),
          ),
          fields: [
            Node(
              kind: Field(
                is_pub: false,
                is_const: false,
                attributes: [
                  Node(
                    kind: "indexed",
                    span: Span(
                      start: 13,
                      end: 21,
                    ),
                  ),
                ],
                name: Node(
                  kind: "x",
                  span: Span(
                    start: 24,
                    end: 25,
                  ),
                ),
                typ: Node(
                  kind: Base(
                    base: "address",
                  ),
                  span: Span(
                    start: 27,
                    end: 34,
                  ),
                ),
                value: None,
              ),
              span: Span(
                start: 24,
                end: 34,
              ),
            ),
            Node(
              kind: Field(
                is_pub: true,
                is_const: false,
                attributes: [],
                name: Node(
                  kind: "y",
                  span: Span(
                    start: 41,
                    end: 42,
                  ),
                ),
                typ: Node(
                  kind: Base(
                    base: "u8",
                  ),
                  span: Span(
                    start: 44,
                    end: 46,
                  ),
                ),
                value: None,
              ),
              span: Span(
                start: 37,
                end: 46,
              ),
            ),
            Node(
              kind: Field(
                is_pub: false,
                is_const: false,
                attributes: [],
                name: Node(
                  kind: "z",
                  span: Span(
                    start: 49,
                    end: 50,
                  ),
                ),
                typ: Node(
                  kind: Base(
                    base: "u8",
                  ),
                  span: Span(
                    start: 52,
                    end: 54,
                  ),
                ),
                value: None,
              ),
              span: Span(
                start: 49,
                end: 54,
              ),
            ),
            Node(
              kind: Field(
                is_pub: true,
                is_const: false,
                attributes: [],
                name: Node(
                  kind: "a",
                  span: Span(
                    start: 61,
                    end: 62,
                  ),
                ),
                typ: Node(
                  kind: Generic(
                    base: Node(
                      kind: "Map",
                      span: Span(
                        start: 64,
                        end: 67,
                      ),
                    ),
                    args: Node(
                      kind: [
                        TypeDesc(Node(
                          kind: Base(
                            base: "u8",
                          ),
                          span: Span(
                            start: 68,
                            end: 70,
                          ),
                        )),
                        TypeDesc(Node(
                          kind: Base(
                            base: "foo",
                          ),
                          span: Span(
                            start: 72,
                            end: 75,
                          ),
                        )),
                      ],
                      span: Span(
                        start: 67,
                        end: 76,
                      ),
                    ),
                  ),
                  span: Span(
                    start: 64,
                    end: 76,
                  ),
                ),
                value: None,
              ),
              span: Span(
                start: 57,
                end: 76,
              ),
            ),
          ],
          functions: [
            Node(
              kind: Function(
                sig: Node(
                  kind: FunctionSignature(
                    pub_: Some(Span(
                      start: 80,
                      end: 83,
                    )),
                    unsafe_: None,
                    name: Node(
                      kind: "foo",
                      span: Span(
                        start: 87,
                        end: 90,
                      ),
                    ),
                    generic_params: Node(
                      kind: [],
                      span: Span(
                        start: 87,
                        end: 90,
                      ),
                    ),
                    args: [
                      Node(
                        kind: Self_(
                          mut_: None,
                        ),
                        span: Span(
                          start: 91,
                          end: 95,
                        ),
                      ),
                    ],
                    return_type: Some(Node(
                      kind: Base(
                        base: "u8",
                      ),
                      span: Span(
                        start: 100,
                        end: 102,
                      ),
                    )),
                  ),
                  span: Span(
                    start: 80,
                    end: 102,
                  ),
                ),
                body: [
                  Node(
                    kind: Return(
                      value: Some(Node(
                        kind: BinOperation(
                          left: Node(
                            kind: Attribute(
                              value: Node(
                                kind: Name("self"),
                                span: Span(
                                  start: 116,
                                  end: 120,
                                ),
                              ),
                              attr: Node(
                                kind: "z",
                                span: Span(
                                  start: 121,
                                  end: 122,
                                ),
                              ),
                            ),
                            span: Span(
                              start: 116,
                              end: 122,
                            ),
                          ),
                          op: Node(
                            kind: Add,
                            span: Span(
                              start: 123,
                              end: 124,
                            ),
                          ),
                          right: Node(
                            kind: Attribute(
                              value: Node(
                                kind: Name("self"),
                                span: Span(
                                  start: 125,
                                  end: 129,
                                ),
                              ),
                              attr: Node(
                                kind: "y",
                                span: Span(
                                  start: 130,
                                  end: 131,
                                ),
                              ),
                            ),
                            span: Span(
                              start: 125,
                              end: 131,
                            ),
                          ),
                        ),
                        span: Span(
                          start: 116,
                          end: 131,
                        ),
                      )),
                    ),
                    span: Span(
                      start: 109,
                      end: 131,
                    ),
                  ),
                ],
              ),
              span: Span(
                start: 80,
                end: 135,
              ),
            ),
            Node(
              kind: Function(
                sig: Node(
                  kind: FunctionSignature(
                    pub_: None,
                    unsafe_: Some(Span(
                      start: 138,
                      end: 144,
                    )),
                    name: Node(
                      kind: "bar",
                      span: Span(
                        start: 148,
                        end: 151,
                      ),
                    ),
                    generic_params: Node(
                      kind: [],
                      span: Span(
                        start: 148,
                        end: 151,
                      ),
                    ),
                    args: [],
                    return_type: None,
                  ),
                  span: Span(
                    start: 138,
                    end: 153,
                  ),
                ),
                body: [],
              ),
              span: Span(
                start: 138,
                end: 156,
              ),
            ),
          ],
          pub_qual: None,
        ),
        span: Span(
          start: 0,
          end: 158,
        ),
      )),
    ],
  ),
  span: Span(
    start: 0,
    end: 158,
  ),
)
