---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(type_generic), types::parse_type_desc,\n    \"foo<a, b<c>, Array<d, 10>>\")"

---
Node(
  kind: Generic(
    base: Node(
      kind: "foo",
      span: Span(
        start: 0,
        end: 3,
      ),
    ),
    args: Node(
      kind: [
        TypeDesc(Node(
          kind: Base(
            base: "a",
          ),
          span: Span(
            start: 4,
            end: 5,
          ),
        )),
        TypeDesc(Node(
          kind: Generic(
            base: Node(
              kind: "b",
              span: Span(
                start: 7,
                end: 8,
              ),
            ),
            args: Node(
              kind: [
                TypeDesc(Node(
                  kind: Base(
                    base: "c",
                  ),
                  span: Span(
                    start: 9,
                    end: 10,
                  ),
                )),
              ],
              span: Span(
                start: 8,
                end: 11,
              ),
            ),
          ),
          span: Span(
            start: 7,
            end: 11,
          ),
        )),
        TypeDesc(Node(
          kind: Generic(
            base: Node(
              kind: "Array",
              span: Span(
                start: 13,
                end: 18,
              ),
            ),
            args: Node(
              kind: [
                TypeDesc(Node(
                  kind: Base(
                    base: "d",
                  ),
                  span: Span(
                    start: 19,
                    end: 20,
                  ),
                )),
                Int(Node(
                  kind: 10,
                  span: Span(
                    start: 22,
                    end: 24,
                  ),
                )),
              ],
              span: Span(
                start: 18,
                end: 25,
              ),
            ),
          ),
          span: Span(
            start: 13,
            end: 25,
          ),
        )),
      ],
      span: Span(
        start: 3,
        end: 26,
      ),
    ),
  ),
  span: Span(
    start: 0,
    end: 26,
  ),
)
