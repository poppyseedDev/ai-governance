---
source: crates/parser/tests/cases/parse_ast.rs
expression: "ast_string(stringify!(type_map3), types::parse_type_desc,\n    \"Map<address, Map<u8, Map<u8, u8>>>\")"

---
Node(
  kind: Generic(
    base: Node(
      kind: "Map",
      span: Span(
        start: 0,
        end: 3,
      ),
    ),
    args: Node(
      kind: [
        TypeDesc(Node(
          kind: Base(
            base: "address",
          ),
          span: Span(
            start: 4,
            end: 11,
          ),
        )),
        TypeDesc(Node(
          kind: Generic(
            base: Node(
              kind: "Map",
              span: Span(
                start: 13,
                end: 16,
              ),
            ),
            args: Node(
              kind: [
                TypeDesc(Node(
                  kind: Base(
                    base: "u8",
                  ),
                  span: Span(
                    start: 17,
                    end: 19,
                  ),
                )),
                TypeDesc(Node(
                  kind: Generic(
                    base: Node(
                      kind: "Map",
                      span: Span(
                        start: 21,
                        end: 24,
                      ),
                    ),
                    args: Node(
                      kind: [
                        TypeDesc(Node(
                          kind: Base(
                            base: "u8",
                          ),
                          span: Span(
                            start: 25,
                            end: 27,
                          ),
                        )),
                        TypeDesc(Node(
                          kind: Base(
                            base: "u8",
                          ),
                          span: Span(
                            start: 29,
                            end: 31,
                          ),
                        )),
                      ],
                      span: Span(
                        start: 24,
                        end: 32,
                      ),
                    ),
                  ),
                  span: Span(
                    start: 21,
                    end: 32,
                  ),
                )),
              ],
              span: Span(
                start: 16,
                end: 33,
              ),
            ),
          ),
          span: Span(
            start: 13,
            end: 33,
          ),
        )),
      ],
      span: Span(
        start: 3,
        end: 34,
      ),
    ),
  ),
  span: Span(
    start: 0,
    end: 34,
  ),
)
