use foo::{MyInt, MY_CONST, MyStruct, MyTrait, my_func, MyContract, MyEnum }

struct SomeThing {}
impl MyTrait for SomeThing {}

contract Main {
    pub fn priv_type_alias() -> MyInt {
        let x: MyInt = 1
        return x
    }

    pub fn priv_const() -> i32 {
        return MY_CONST
    }

    pub fn priv_struct() {
        let s: MyStruct = MyStruct(x: 1)
    }

    pub fn priv_func() {
        my_func()
    }

    pub fn priv_enum() {
        let e: MyEnum = MyEnum::Some
    }

    pub fn priv_contract(mut ctx: Context, addr: address) {
        let _: MyContract = MyContract(addr)
        MyContract.create(ctx, 1)
    }
}
