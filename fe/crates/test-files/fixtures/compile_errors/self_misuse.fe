fn foo() {
    let self: u8 = 10
    self = 5
}

fn change_x(mut _ s: S) {
    s.x = 100
}

fn bar(_ c: C) {}

struct S {
    pub x: u8

    fn f(self) {
        self()
    }

    fn g(mut self) {
        self = S(x: 10)
    }

    fn h(mut self) {
        change_x(self)
    }
}

contract C {
    x: u8

    fn g(self) {}

    fn h(self) {
        let x: address = address(self)
        g(self)
    }

    fn i(self) {
        bar(self)
    }
}
