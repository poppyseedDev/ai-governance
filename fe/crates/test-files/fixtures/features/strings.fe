struct MyEvent {
    pub s2: String<26>
    pub u: u256
    pub s1: String<42>
    pub s3: String<100>
    pub a: address
    pub s4: String<18>
    pub s5: String<100>
}

contract Foo {

    pub fn __init__(mut ctx: Context, s1: String<42>, a: address, s2: String<26>, u: u256, s3: String<100>) {
        ctx.emit(MyEvent(s2, u, s1, s3, a, s4: "static string", s5: String<100>("foo")))
    }

    pub fn bar(s1: String<100>, s2: String<100>) -> String<100> {
        return s2
    }

    pub fn return_static_string() -> String<43> {
        return "The quick brown fox jumps over the lazy dog"
    }

    pub fn return_casted_static_string() -> String<100> {
        return String<100>("foo")
    }

    pub fn shorter_string_assign() {
        let s: String<18> = "fe"
    }

    pub fn return_special_chars() -> String<18> {
        return "\n\"'\r\t
        foo\\"
    }
}
