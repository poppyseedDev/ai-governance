contract Foo {
    other: Bar

    pub fn __init__(mut self, mut ctx: Context) {
        self.other = Bar.create(ctx, 0)
    }

    pub fn foo(mut self, ctx: Context) -> u256 {
        self.other.set_foo_addr(ctx.self_address())
        return self.other.answer()
    }

    pub fn add(self, _ x: u256, _ y: u256) -> u256 {
        return x + y
    }
}

contract Bar {
    other: Foo

    pub fn set_foo_addr(mut self, _ addr: address) {
        self.other = Foo(addr)
    }

    pub fn answer(self) -> u256 {
        return self.other.add(20, 22)
    }
}
