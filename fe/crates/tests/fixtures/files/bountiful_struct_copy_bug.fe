struct Point {
    pub x: u16
    pub y: u16
}

pub struct Board {
    pub first: Point
    pub second: Point

    pub fn swap_y(mut self, p1: Point, p2: Point) {
        self.first = Point (x: p1.x, y: p2.y)
        self.second = Point (x: p2.x, y: p1.y)
    }

    pub fn get_first(self) -> Point {
        return self.first
    }
    pub fn get_second(self) -> Point {
        return self.second
    }
}

#test
fn test_board() {
    let mut b: Board = Board(first: Point(x:100, y: 200),
                                second: Point(x: 1, y: 2))

    assert b.first.x == 100 and b.first.y == 200
    assert b.second.x == 1 and b.second.y == 2

    b.swap_y(p1: b.get_first(), p2: b.get_second())
    assert b.first.y == 2
    assert b.second.y == 200

    // This is a compiler error
    // b.swap_y(p1: b.first, p2: b.second)
}